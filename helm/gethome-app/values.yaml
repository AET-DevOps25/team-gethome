# Global configuration
global:
  namespace: devops25-k8s-gethome
  environment: production
  imageRegistry: "ghcr.io"
  imagePullSecrets: []

# Replica count for all services
replicaCount: 1

# MongoDB configuration
mongo:
  enabled: true
  image: mongo:6
  imagePullPolicy: IfNotPresent
  username: root
  password: example
  database: gethome
  storage:
    size: 10Gi
    storageClass: ""
  resources:
    limits:
      cpu: 1000m
      memory: 2Gi
    requests:
      cpu: 500m
      memory: 1Gi
  service:
    type: ClusterIP
    port: 27017

# Monitoring configuration
monitoring:
  enabled: true
  
  # Prometheus configuration
  prometheus:
    enabled: true
    image: prom/prometheus:v2.45.0
    imagePullPolicy: IfNotPresent
    retention: "15d"
    storage:
      size: 50Gi
      storageClass: ""
    resources:
      limits:
        cpu: 1000m
        memory: 2Gi
      requests:
        cpu: 500m
        memory: 1Gi

  # Grafana configuration
  grafana:
    enabled: true
    image: grafana/grafana:10.0.0
    imagePullPolicy: IfNotPresent
    adminUser: admin
    adminPassword: admin123
    storage:
      size: 10Gi
      storageClass: ""
    resources:
      limits:
        cpu: 500m
        memory: 1Gi
      requests:
        cpu: 250m
        memory: 512Mi

  # AlertManager configuration
  alertmanager:
    enabled: true
    image: prom/alertmanager:v0.25.0
    imagePullPolicy: IfNotPresent
    storage:
      size: 5Gi
      storageClass: ""
    resources:
      limits:
        cpu: 500m
        memory: 512Mi
      requests:
        cpu: 250m
        memory: 256Mi
    slack:
      webhookUrl: "https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK"
      channel: "#gethome-alerts"
      criticalChannel: "#gethome-critical"

# Ingress configuration
ingress:
  enabled: true
  className: nginx
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
  hosts:
    - host: gethome.local
      paths:
        - path: /
          pathType: Prefix
          service: react-client
        - path: /api/auth
          pathType: Prefix
          service: auth-service
        - path: /api/user
          pathType: Prefix
          service: usermanagement-service
        - path: /api/ai
          pathType: Prefix
          service: ai-service
        - path: /api/emergency
          pathType: Prefix
          service: emergency-service
        - path: /api/routing
          pathType: Prefix
          service: routing-service
        - path: /monitoring
          pathType: Prefix
          service: grafana
        - path: /prometheus
          pathType: Prefix
          service: prometheus
  tls:
    - secretName: gethome-tls
      hosts:
        - gethome.local

# Services configuration
services:
  # AI Service
  ai-service:
    enabled: true
    image: ghcr.io/aet-devops25/team-gethome/ai-service:latest
    imagePullPolicy: IfNotPresent
    port: 8000
    resources:
      limits:
        cpu: 1000m
        memory: 2Gi
      requests:
        cpu: 500m
        memory: 1Gi
    env:
      - name: MONGODB_URI
        value: "mongodb://mongo:27017/gethome"
      - name: AI_MODEL_PATH
        value: "/app/models"
      - name: ENABLE_METRICS
        value: "true"
    service:
      type: ClusterIP
      port: 80
      targetPort: 8000

  # Auth Service
  auth-service:
    enabled: true
    image: ghcr.io/aet-devops25/team-gethome/auth-service:latest
    imagePullPolicy: IfNotPresent
    port: 8080
    resources:
      limits:
        cpu: 1000m
        memory: 1Gi
      requests:
        cpu: 500m
        memory: 512Mi
    env:
      - name: SPRING_PROFILES_ACTIVE
        value: "production"
      - name: SPRING_DATA_MONGODB_URI
        value: "mongodb://mongo:27017/gethome"
      - name: JWT_SECRET
        value: "your-super-secret-jwt-key-change-in-production"
      - name: JWT_EXPIRATION
        value: "86400000"
      - name: MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE
        value: "health,info,prometheus,metrics"
      - name: MANAGEMENT_ENDPOINT_PROMETHEUS_ENABLED
        value: "true"
    service:
      type: ClusterIP
      port: 80
      targetPort: 8080

  # Emergency Service
  emergency-service:
    enabled: true
    image: ghcr.io/aet-devops25/team-gethome/emergency-service:latest
    imagePullPolicy: IfNotPresent
    port: 8080
    resources:
      limits:
        cpu: 1000m
        memory: 1Gi
      requests:
        cpu: 500m
        memory: 512Mi
    env:
      - name: SPRING_PROFILES_ACTIVE
        value: "production"
      - name: SPRING_DATA_MONGODB_URI
        value: "mongodb://mongo:27017/gethome"
      - name: MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE
        value: "health,info,prometheus,metrics"
      - name: MANAGEMENT_ENDPOINT_PROMETHEUS_ENABLED
        value: "true"
    service:
      type: ClusterIP
      port: 80
      targetPort: 8080

  # Routing Service
  routing-service:
    enabled: true
    image: ghcr.io/aet-devops25/team-gethome/routing-service:latest
    imagePullPolicy: IfNotPresent
    port: 8080
    resources:
      limits:
        cpu: 1000m
        memory: 1Gi
      requests:
        cpu: 500m
        memory: 512Mi
    env:
      - name: SPRING_PROFILES_ACTIVE
        value: "production"
      - name: SPRING_DATA_MONGODB_URI
        value: "mongodb://mongo:27017/gethome"
      - name: MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE
        value: "health,info,prometheus,metrics"
      - name: MANAGEMENT_ENDPOINT_PROMETHEUS_ENABLED
        value: "true"
    service:
      type: ClusterIP
      port: 80
      targetPort: 8080

  # User Management Service
  usermanagement-service:
    enabled: true
    image: ghcr.io/aet-devops25/team-gethome/usermanagement-service:latest
    imagePullPolicy: IfNotPresent
    port: 8080
    resources:
      limits:
        cpu: 1000m
        memory: 1Gi
      requests:
        cpu: 500m
        memory: 512Mi
    env:
      - name: SPRING_PROFILES_ACTIVE
        value: "production"
      - name: SPRING_DATA_MONGODB_URI
        value: "mongodb://mongo:27017/gethome"
      - name: AUTH_SERVICE_URL
        value: "http://auth-service:80"
      - name: MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE
        value: "health,info,prometheus,metrics"
      - name: MANAGEMENT_ENDPOINT_PROMETHEUS_ENABLED
        value: "true"
    service:
      type: ClusterIP
      port: 80
      targetPort: 8080

  # React Client
  react-client:
    enabled: true
    image: ghcr.io/aet-devops25/team-gethome/react-client:latest
    imagePullPolicy: IfNotPresent
    port: 80
    resources:
      limits:
        cpu: 500m
        memory: 512Mi
      requests:
        cpu: 250m
        memory: 256Mi
    env:
      - name: REACT_APP_API_BASE_URL
        value: "https://gethome.local/api"
      - name: REACT_APP_AUTH_SERVICE_URL
        value: "https://gethome.local/api/auth"
    service:
      type: ClusterIP
      port: 80
      targetPort: 80

# ConfigMap for shared configuration
configMap:
  enabled: true
  data:
    app.name: "GetHome"
    app.version: "1.0.0"
    app.environment: "production"

# Secrets configuration
secrets:
  enabled: true
  data:
    jwt-secret: "your-super-secret-jwt-key-change-in-production"
    mongo-password: "example"
    email-password: "your-email-password"

# Service Account
serviceAccount:
  enabled: true
  name: gethome-service-account
  annotations: {}

# Pod Security Context
podSecurityContext:
  fsGroup: 1000
  runAsNonRoot: true
  runAsUser: 1000

# Container Security Context
containerSecurityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000
  capabilities:
    drop:
      - ALL

# Pod Disruption Budget
podDisruptionBudget:
  enabled: false
  minAvailable: 1

# Horizontal Pod Autoscaler
hpa:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80
