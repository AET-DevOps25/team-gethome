# Global configuration
global:
  namespace: devops25-k8s-gethome
  environment: production
  imageRegistry: "ghcr.io"
  imagePullSecrets: []

# Replica count for all services
replicaCount: 1

# MongoDB configuration
mongo:
  enabled: true
  image: mongo:6
  imagePullPolicy: IfNotPresent
  username: root
  password: example
  database: gethome
  storage:
    size: 10Gi
    storageClass: ""
  resources:
    limits:
      cpu: 1000m
      memory: 2Gi
    requests:
      cpu: 500m
      memory: 1Gi
  service:
    type: ClusterIP
    port: 27017

# Monitoring configuration
monitoring:
  enabled: true
  
  # Prometheus configuration
  prometheus:
    enabled: true
    image: prom/prometheus:v2.45.0
    imagePullPolicy: IfNotPresent
    retention: "15d"
    storage:
      size: 50Gi
      storageClass: ""
    resources:
      limits:
        cpu: 1000m
        memory: 2Gi
      requests:
        cpu: 500m
        memory: 1Gi

  # Grafana configuration
  grafana:
    enabled: true
    image: grafana/grafana:10.0.0
    imagePullPolicy: IfNotPresent
    adminUser: admin
    adminPassword: admin123
    storage:
      size: 10Gi
      storageClass: ""
    resources:
      limits:
        cpu: 500m
        memory: 1Gi
      requests:
        cpu: 250m
        memory: 512Mi

  # AlertManager configuration
  alertmanager:
    enabled: true
    image: prom/alertmanager:v0.25.0
    imagePullPolicy: IfNotPresent
    storage:
      size: 5Gi
      storageClass: ""
    resources:
      limits:
        cpu: 500m
        memory: 512Mi
      requests:
        cpu: 250m
        memory: 256Mi
    slack:
      webhookUrl: "https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK"
      channel: "#gethome-alerts"
      criticalChannel: "#gethome-critical"

# Ingress configuration
ingress:
  enabled: true
  className: nginx
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
  hosts:
    - host: gethome.local
      paths:
        - path: /
          pathType: Prefix
          service: react-client
        - path: /api/auth
          pathType: Prefix
          service: auth-service
        - path: /api/user
          pathType: Prefix
          service: usermanagement-service
        - path: /api/ai
          pathType: Prefix
          service: ai-service
        - path: /api/message
          pathType: Prefix
          service: message-service
        - path: /api/routing
          pathType: Prefix
          service: routing-service
        - path: /monitoring
          pathType: Prefix
          service: grafana
        - path: /prometheus
          pathType: Prefix
          service: prometheus
  tls:
    - secretName: gethome-tls
      hosts:
        - gethome.local

# Services configuration
services:
  # AI Service
  ai-service:
    enabled: true
    image: ghcr.io/aet-devops25/team-gethome/ai-service:latest
    imagePullPolicy: IfNotPresent
    port: 8085
    resources:
      limits:
        cpu: 1000m
        memory: 2Gi
      requests:
        cpu: 500m
        memory: 1Gi
    env:
      - name: JWT_SECRET
        valueFrom:
          secretKeyRef:
            name: gethome-secrets
            key: jwt-secret
      - name: JWT_ALGORITHM
        value: "HS256"
      - name: USER_SERVICE_URL
        value: "http://usermanagement-service:8082/api/users/{user_id}/profile"
      - name: OPENAI_API_KEY
        valueFrom:
          secretKeyRef:
            name: gethome-secrets
            key: openai-api-key
      - name: MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE
        value: "health,info,prometheus,metrics"
      - name: MANAGEMENT_ENDPOINT_PROMETHEUS_ENABLED
        value: "true"
    service:
      type: ClusterIP
      port: 8085
      targetPort: 8085

  # Auth Service
  auth-service:
    enabled: true
    image: ghcr.io/aet-devops25/team-gethome/auth-service:latest
    imagePullPolicy: IfNotPresent
    port: 8081
    resources:
      limits:
        cpu: 1000m
        memory: 1Gi
      requests:
        cpu: 500m
        memory: 512Mi
    env:
      - name: SPRING_PROFILES_ACTIVE
        value: "production"
      - name: SPRING_DATA_MONGODB_HOST
        value: "mongo"
      - name: SPRING_DATA_MONGODB_PORT
        value: "27017"
      - name: SPRING_DATA_MONGODB_DATABASE
        value: "gethome_auth"
      - name: JWT_SECRET
        valueFrom:
          secretKeyRef:
            name: gethome-secrets
            key: jwt-secret
      - name: JWT_EXPIRATION
        value: "86400000"
      - name: SPRING_MAIL_HOST
        value: "smtp.gmail.com"
      - name: SPRING_MAIL_PORT
        value: "587"
      - name: SPRING_MAIL_USERNAME
        valueFrom:
          secretKeyRef:
            name: gethome-secrets
            key: email-username
      - name: SPRING_MAIL_PASSWORD
        valueFrom:
          secretKeyRef:
            name: gethome-secrets
            key: email-password
      - name: MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE
        value: "health,info,prometheus,metrics"
      - name: MANAGEMENT_ENDPOINT_PROMETHEUS_ENABLED
        value: "true"
    service:
      type: ClusterIP
      port: 8081
      targetPort: 8081

  # Message Service
  message-service:
    enabled: true
    image: ghcr.io/aet-devops25/team-gethome/message-service:latest
    imagePullPolicy: IfNotPresent
    port: 8083
    resources:
      limits:
        cpu: 1000m
        memory: 1Gi
      requests:
        cpu: 500m
        memory: 512Mi
    env:
      - name: SPRING_PROFILES_ACTIVE
        value: "production"
      - name: SPRING_DATA_MONGODB_HOST
        value: "mongo"
      - name: SPRING_DATA_MONGODB_PORT
        value: "27017"
      - name: SPRING_DATA_MONGODB_DATABASE
        value: "gethome_messages"
      - name: JWT_SECRET
        valueFrom:
          secretKeyRef:
            name: gethome-secrets
            key: jwt-secret
      - name: JWT_EXPIRATION
        value: "86400000"
      - name: SERVICE_AUTH_URL
        value: "http://auth-service:8081"
      - name: SERVICE_USERMANAGEMENT_URL
        value: "http://usermanagement-service:8082"
      - name: SERVICE_ROUTING_URL
        value: "http://routing-service:8084"
      - name: SERVICE_AI_URL
        value: "http://ai-service:8085"
      - name: SPRING_MAIL_HOST
        value: "smtp.gmail.com"
      - name: SPRING_MAIL_PORT
        value: "587"
      - name: SPRING_MAIL_USERNAME
        valueFrom:
          secretKeyRef:
            name: gethome-secrets
            key: email-username
      - name: SPRING_MAIL_PASSWORD
        valueFrom:
          secretKeyRef:
            name: gethome-secrets
            key: email-password
      - name: TWILIO_ACCOUNT_SID
        valueFrom:
          secretKeyRef:
            name: gethome-secrets
            key: twilio-account-sid
      - name: TWILIO_AUTH_TOKEN
        valueFrom:
          secretKeyRef:
            name: gethome-secrets
            key: twilio-auth-token
      - name: TWILIO_PHONE_NUMBER
        valueFrom:
          secretKeyRef:
            name: gethome-secrets
            key: twilio-phone-number
      - name: MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE
        value: "health,info,prometheus,metrics"
      - name: MANAGEMENT_ENDPOINT_PROMETHEUS_ENABLED
        value: "true"
    service:
      type: ClusterIP
      port: 8083
      targetPort: 8083

  # Routing Service
  routing-service:
    enabled: true
    image: ghcr.io/aet-devops25/team-gethome/routing-service:latest
    imagePullPolicy: IfNotPresent
    port: 8084
    resources:
      limits:
        cpu: 1000m
        memory: 1Gi
      requests:
        cpu: 500m
        memory: 512Mi
    env:
      - name: SPRING_PROFILES_ACTIVE
        value: "production"
      - name: SPRING_DATA_MONGODB_HOST
        value: "mongo"
      - name: SPRING_DATA_MONGODB_PORT
        value: "27017"
      - name: SPRING_DATA_MONGODB_DATABASE
        value: "gethome_routing"
      - name: JWT_SECRET
        valueFrom:
          secretKeyRef:
            name: gethome-secrets
            key: jwt-secret
      - name: JWT_EXPIRATION
        value: "86400000"
      - name: SERVICE_AUTH_URL
        value: "http://auth-service:8081"
      - name: SERVICE_USERMANAGEMENT_URL
        value: "http://usermanagement-service:8082"
      - name: SERVICE_MESSAGE_URL
        value: "http://message-service:8083"
      - name: SERVICE_AI_URL
        value: "http://ai-service:8085"
      - name: ROUTING_API_URL
        value: "https://api.openrouteservice.org/v2"
      - name: ROUTING_API_KEY
        valueFrom:
          secretKeyRef:
            name: gethome-secrets
            key: openrouteservice-api-key
      - name: MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE
        value: "health,info,prometheus,metrics"
      - name: MANAGEMENT_ENDPOINT_PROMETHEUS_ENABLED
        value: "true"
    service:
      type: ClusterIP
      port: 8084
      targetPort: 8084

  # User Management Service
  usermanagement-service:
    enabled: true
    image: ghcr.io/aet-devops25/team-gethome/usermanagement-service:latest
    imagePullPolicy: IfNotPresent
    port: 8082
    resources:
      limits:
        cpu: 1000m
        memory: 1Gi
      requests:
        cpu: 500m
        memory: 512Mi
    env:
      - name: SPRING_PROFILES_ACTIVE
        value: "production"
      - name: SPRING_DATA_MONGODB_HOST
        value: "mongo"
      - name: SPRING_DATA_MONGODB_PORT
        value: "27017"
      - name: SPRING_DATA_MONGODB_DATABASE
        value: "gethome_users"
      - name: JWT_SECRET
        valueFrom:
          secretKeyRef:
            name: gethome-secrets
            key: jwt-secret
      - name: JWT_EXPIRATION
        value: "86400000"
      - name: SERVICE_AUTH_URL
        value: "http://auth-service:8081"
      - name: MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE
        value: "health,info,prometheus,metrics"
      - name: MANAGEMENT_ENDPOINT_PROMETHEUS_ENABLED
        value: "true"
    service:
      type: ClusterIP
      port: 8082
      targetPort: 8082

  # React Client
  react-client:
    enabled: true
    image: ghcr.io/aet-devops25/team-gethome/react-client:latest
    imagePullPolicy: IfNotPresent
    port: 80
    resources:
      limits:
        cpu: 500m
        memory: 512Mi
      requests:
        cpu: 250m
        memory: 256Mi
    env:
      - name: REACT_APP_API_BASE_URL
        value: "https://gethome.local/api"
      - name: REACT_APP_AUTH_SERVICE_URL
        value: "https://gethome.local/api/auth"
      - name: REACT_APP_USERMANAGEMENT_SERVICE_URL
        value: "https://gethome.local/api/user"
      - name: REACT_APP_ROUTING_SERVICE_URL
        value: "https://gethome.local/api/routing"
      - name: REACT_APP_CHAT_SERVICE_URL
        value: "https://gethome.local/api/ai"
    service:
      type: ClusterIP
      port: 80
      targetPort: 80

# ConfigMap for shared configuration
configMap:
  enabled: true
  data:
    app.name: "GetHome"
    app.version: "1.0.0"
    app.environment: "production"

# Secrets configuration
secrets:
  enabled: true
  data:
    jwt-secret: "your-super-secret-jwt-key-change-in-production"
    mongo-password: "example"
    email-username: "your-email@gmail.com"
    email-password: "your-email-app-password"
    twilio-account-sid: "your-twilio-account-sid"
    twilio-auth-token: "your-twilio-auth-token"
    twilio-phone-number: "+1234567890"
    openai-api-key: "your-openai-api-key"
    openrouteservice-api-key: "your-openrouteservice-api-key"

# Service Account
serviceAccount:
  enabled: true
  name: gethome-service-account
  annotations: {}

# Pod Security Context
podSecurityContext:
  fsGroup: 1000
  runAsNonRoot: true
  runAsUser: 1000

# Container Security Context
containerSecurityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000
  capabilities:
    drop:
      - ALL

# Pod Disruption Budget
podDisruptionBudget:
  enabled: false
  minAvailable: 1

# Horizontal Pod Autoscaler
hpa:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80
